# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
---
version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@3.2.2

commands:
  authenticate-gcp:
    steps:
      - gcp-cli/setup:
          use_oidc: true
  deploy-service:
    parameters:
      cloud-run-instance:
        type: string
        default: ${CIRCLE_PROJECT_REPONAME}
    steps:
      - run:
          name: Check if Cloud Run service exists
          command: |
            if gcloud run services describe <<parameters.cloud-run-instance>> --region="${GCP_AR_REGION}" > /dev/null; then
              echo "Cloud Run service <<parameters.cloud-run-instance>> exists"
            else
              echo "Cloud Run service <<parameters.cloud-run-instance>> does not exist"
              circleci-agent step halt
            fi
      - run:
          name: Update the Cloud Run with new image
          command: |
            gcloud run services update \
              <<parameters.cloud-run-instance>> \
              --image="${GCP_AR_REGION}-docker.pkg.dev/${GOOGLE_PROJECT_ID}/${GCP_AR_REPO}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1:0:7}" \
              --region="${GCP_AR_REGION}"

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    executor: gcp-cli/google
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true # DLC will explicitly cache layers here and try to avoid rebuilding.
      - authenticate-gcp
      - run:
          name: Set up Docker auth
          command: gcloud auth configure-docker "${GCP_AR_REGION}-docker.pkg.dev"
      - run:
          name: "Create Docker Buildx builder"
          command: |
            docker buildx create \
              --name container \
              --driver=docker-container \
              --use --bootstrap
      - run:
          name: "Build Docker builder image"
          command: |
            docker buildx build \
              -t ${CIRCLE_PROJECT_REPONAME}:builder \
              --load --target builder .
      - run:
          name: "Build and push Docker runtime image"
          command: |
            docker buildx build \
              -t "${GCP_AR_REGION}-docker.pkg.dev/${GOOGLE_PROJECT_ID}/${GCP_AR_REPO}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1:0:7}" \
              --push  .
  deploy-prod:
    executor: gcp-cli/google
    resource_class: small
    steps:
      - authenticate-gcp
      - deploy-service
  deploy-staging:
    executor: gcp-cli/google
    resource_class: small
    steps:
      - authenticate-gcp
      - deploy-service:
          cloud-run-instance: "${CIRCLE_PROJECT_REPONAME}-staging"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build-deploy:
    jobs:
      - build
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: /main/
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              ignore: /main/
